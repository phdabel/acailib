<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <logicalFolder name="HeaderFiles"
                   displayName="Arquivos de Cabeçalho"
                   projectFiles="true">
    </logicalFolder>
    <logicalFolder name="SourceFiles"
                   displayName="Arquivos de Código-Fonte"
                   projectFiles="true">
      <logicalFolder name="f1" displayName="core" projectFiles="true">
        <itemPath>core/Edge.cpp</itemPath>
        <itemPath>core/Edge.h</itemPath>
        <itemPath>core/IUnit.h</itemPath>
        <itemPath>core/ObjectID.cpp</itemPath>
        <itemPath>core/ObjectID.h</itemPath>
        <itemPath>core/UnitType.h</itemPath>
      </logicalFolder>
      <logicalFolder name="f3" displayName="neuralnet" projectFiles="true">
        <logicalFolder name="f2" displayName="algorithms" projectFiles="true">
          <itemPath>neuralnet/algorithms/BackPropagationLearning.cpp</itemPath>
          <itemPath>neuralnet/algorithms/BackPropagationLearning.h</itemPath>
          <itemPath>neuralnet/algorithms/ILearningAlgorithm.h</itemPath>
        </logicalFolder>
        <logicalFolder name="f1" displayName="functions" projectFiles="true">
          <itemPath>neuralnet/functions/FuncRectifier.cpp</itemPath>
          <itemPath>neuralnet/functions/FuncRectifier.h</itemPath>
          <itemPath>neuralnet/functions/FuncTanH.cpp</itemPath>
          <itemPath>neuralnet/functions/FuncTanH.h</itemPath>
          <itemPath>neuralnet/functions/IActivationFunction.h</itemPath>
        </logicalFolder>
        <itemPath>neuralnet/IAbstractLayer.h</itemPath>
        <itemPath>neuralnet/INeuralNetwork.h</itemPath>
        <itemPath>neuralnet/Layer.cpp</itemPath>
        <itemPath>neuralnet/Layer.h</itemPath>
        <itemPath>neuralnet/LayerType.h</itemPath>
        <itemPath>neuralnet/MultiLayerPerceptron.cpp</itemPath>
        <itemPath>neuralnet/MultiLayerPerceptron.h</itemPath>
        <itemPath>neuralnet/Neuron.cpp</itemPath>
        <itemPath>neuralnet/Neuron.h</itemPath>
      </logicalFolder>
      <logicalFolder name="f2" displayName="utils" projectFiles="true">
        <itemPath>utils/IdGenerator.cpp</itemPath>
        <itemPath>utils/IdGenerator.h</itemPath>
      </logicalFolder>
      <itemPath>main.cpp</itemPath>
    </logicalFolder>
    <logicalFolder name="ResourceFiles"
                   displayName="Arquivos de Recurso"
                   projectFiles="true">
    </logicalFolder>
    <logicalFolder name="TestFiles"
                   displayName="Arquivos de Teste"
                   projectFiles="false"
                   kind="TEST_LOGICAL_FOLDER">
      <logicalFolder name="f2"
                     displayName="Layer_Test"
                     projectFiles="true"
                     kind="TEST">
        <itemPath>tests/neuralnet/Layer_Test.cpp</itemPath>
        <itemPath>tests/neuralnet/Layer_Test.h</itemPath>
        <itemPath>tests/neuralnet/layer_runner.cpp</itemPath>
      </logicalFolder>
      <logicalFolder name="f1"
                     displayName="MultiLayerPerceptron_Test"
                     projectFiles="true"
                     kind="TEST">
        <itemPath>tests/neuralnet/MultiLayerPerceptron_Test.cpp</itemPath>
        <itemPath>tests/neuralnet/MultiLayerPerceptron_Test.h</itemPath>
        <itemPath>tests/neuralnet/multilayerperceptron-runner.cpp</itemPath>
      </logicalFolder>
      <logicalFolder name="f5"
                     displayName="NetworkPotential_Test"
                     projectFiles="true"
                     kind="TEST">
        <itemPath>tests/neuralnet/NetworkPotential_Test.cpp</itemPath>
        <itemPath>tests/neuralnet/NetworkPotential_Test.h</itemPath>
        <itemPath>tests/neuralnet/networkPotential_runner.cpp</itemPath>
      </logicalFolder>
    </logicalFolder>
    <logicalFolder name="ExternalFiles"
                   displayName="Arquivos Importantes"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>Makefile</itemPath>
    </logicalFolder>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Debug" type="1">
      <toolsSet>
        <compilerSet>default</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <ccTool>
          <standard>8</standard>
        </ccTool>
      </compileType>
      <item path="core/Edge.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="core/Edge.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="core/IUnit.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="core/ObjectID.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="core/ObjectID.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="core/UnitType.h" ex="false" tool="3" flavor2="0">
      </item>
      <folder path="TestFiles">
        <linkerTool>
          <linkerLibItems>
            <linkerOptionItem>`pkg-config --libs cpputest`</linkerOptionItem>
          </linkerLibItems>
        </linkerTool>
      </folder>
      <folder path="TestFiles/f1">
        <cTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </cTool>
        <ccTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </ccTool>
        <linkerTool>
          <output>${TESTDIR}/TestFiles/f1</output>
          <linkerLibItems>
            <linkerOptionItem>`cppunit-config --libs`</linkerOptionItem>
          </linkerLibItems>
        </linkerTool>
      </folder>
      <folder path="TestFiles/f2">
        <cTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </cTool>
        <ccTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </ccTool>
        <linkerTool>
          <output>${TESTDIR}/TestFiles/f2</output>
          <linkerLibItems>
            <linkerOptionItem>`cppunit-config --libs`</linkerOptionItem>
          </linkerLibItems>
        </linkerTool>
      </folder>
      <folder path="TestFiles/f5">
        <cTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </cTool>
        <ccTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </ccTool>
        <linkerTool>
          <output>${TESTDIR}/TestFiles/f5</output>
          <linkerLibItems>
            <linkerOptionItem>`cppunit-config --libs`</linkerOptionItem>
          </linkerLibItems>
        </linkerTool>
      </folder>
      <item path="main.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/IAbstractLayer.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/INeuralNetwork.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/Layer.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/Layer.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/LayerType.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/MultiLayerPerceptron.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/MultiLayerPerceptron.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/Neuron.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/Neuron.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/algorithms/BackPropagationLearning.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="neuralnet/algorithms/BackPropagationLearning.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="neuralnet/algorithms/ILearningAlgorithm.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncRectifier.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncRectifier.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncTanH.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncTanH.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/functions/IActivationFunction.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/Layer_Test.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="tests/neuralnet/Layer_Test.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="tests/neuralnet/MultiLayerPerceptron_Test.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/MultiLayerPerceptron_Test.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/NetworkPotential_Test.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/NetworkPotential_Test.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/layer_runner.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="tests/neuralnet/multilayerperceptron-runner.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/networkPotential_runner.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="utils/IdGenerator.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="utils/IdGenerator.h" ex="false" tool="3" flavor2="0">
      </item>
    </conf>
    <conf name="Release" type="1">
      <toolsSet>
        <compilerSet>default</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
          <standard>8</standard>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
        </asmTool>
      </compileType>
      <item path="core/Edge.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="core/Edge.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="core/IUnit.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="core/ObjectID.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="core/ObjectID.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="core/UnitType.h" ex="false" tool="3" flavor2="0">
      </item>
      <folder path="TestFiles/f1">
        <cTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </cTool>
        <ccTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </ccTool>
        <linkerTool>
          <output>${TESTDIR}/TestFiles/f1</output>
          <linkerLibItems>
            <linkerOptionItem>`cppunit-config --libs`</linkerOptionItem>
          </linkerLibItems>
        </linkerTool>
      </folder>
      <folder path="TestFiles/f2">
        <cTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </cTool>
        <ccTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </ccTool>
        <linkerTool>
          <output>${TESTDIR}/TestFiles/f2</output>
          <linkerLibItems>
            <linkerOptionItem>`cppunit-config --libs`</linkerOptionItem>
          </linkerLibItems>
        </linkerTool>
      </folder>
      <folder path="TestFiles/f5">
        <cTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </cTool>
        <ccTool>
          <commandLine>`cppunit-config --cflags`</commandLine>
        </ccTool>
        <linkerTool>
          <output>${TESTDIR}/TestFiles/f5</output>
          <linkerLibItems>
            <linkerOptionItem>`cppunit-config --libs`</linkerOptionItem>
          </linkerLibItems>
        </linkerTool>
      </folder>
      <item path="main.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/IAbstractLayer.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/INeuralNetwork.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/Layer.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/Layer.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/LayerType.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/MultiLayerPerceptron.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/MultiLayerPerceptron.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/Neuron.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/Neuron.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/algorithms/BackPropagationLearning.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="neuralnet/algorithms/BackPropagationLearning.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="neuralnet/algorithms/ILearningAlgorithm.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncRectifier.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncRectifier.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncTanH.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="neuralnet/functions/FuncTanH.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="neuralnet/functions/IActivationFunction.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/Layer_Test.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="tests/neuralnet/Layer_Test.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="tests/neuralnet/MultiLayerPerceptron_Test.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/MultiLayerPerceptron_Test.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/NetworkPotential_Test.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/NetworkPotential_Test.h"
            ex="false"
            tool="3"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/layer_runner.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="tests/neuralnet/multilayerperceptron-runner.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="tests/neuralnet/networkPotential_runner.cpp"
            ex="false"
            tool="1"
            flavor2="0">
      </item>
      <item path="utils/IdGenerator.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="utils/IdGenerator.h" ex="false" tool="3" flavor2="0">
      </item>
    </conf>
  </confs>
</configurationDescriptor>
